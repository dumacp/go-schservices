syntax = "proto3";
package messages;

import "services.proto";

option go_package = "github.com/dumacp/go-schservices/api/services";

message DiscoverSch {
	string id = 1;
    string addr = 2;
}

message DiscoverResponseSch {
	string id = 1;
    string addr = 2;
}

message SubscribeSch {
	string id = 1;
    string addr = 2;
}

message ExternalServiceSch {
	int64 Timestamp = 1;
    	int64 Timeservice = 2;
    	int32 Itininerary = 3;
    	int32 Route = 4;
}

message RequestStatusSch {}
message StatusSch {
    int32 state = 1;
}

message updateServiceMsg {
	scheduleService update = 1;
}
message removeServiceMsg {
	scheduleService update = 1;
}
message serviceMsg {
	scheduleService update = 1;
}
message serviceAllMsg {
	repeated scheduleService updates = 1;
}
message getCompanyProgSvcMsg {
	string companyId = 1;
	int32 routeId = 2;
	string state = 3;
	string deviceId = 4;
}
message companyProgSvcMsg {
	repeated scheduleService scheduledServices = 1;
	string error = 2;
}

message getCompanyProgShiftsMsg {
	string companyId = 1;
	string shiftId = 2;
	string state = 3;
	string deviceId = 4;
}
message companyProgShiftsMsg {
	repeated shiftService shiftsServices = 1;
	string error = 2;
}

message getCompanyDriverMsg {
	string companyId = 1;
	string driverDoc = 2;
}

message companyDriverMsg {
	driver driver = 1;
}

message takeServiceMsg {
	string deviceId = 1;
	string platformId = 2;
	string driverId = 3;
	string companyId = 4;
	string serviceId = 5;
	string messageId = 6;
}

message takeServiceResponseMsg {
	string id = 1;
	int32 dataCode = 2;
	string dataMsg = 3;
	string error = 5;
}

message retakeServiceMsg {
	string deviceId = 1;
	string platformId = 2;
	string driverId = 3;
	string companyId = 4;
	string serviceId = 5;
	string messageId = 6;
}

message retakeServiceResponseMsg {
	string id = 1;
	int32 dataCode = 2;
	string dataMsg = 3;
	string error = 5;
}

message takeShiftMsg {
	string deviceId = 1;
	string platformId = 2;
	string driverId = 3;
	string serviceSchedulingId = 4;
	string shiftId = 5;
	string messageId = 6;
	int64 timestamp = 7;
}

message takeShiftResponseMsg {
	string id = 1;
	int32 dataCode = 2;
	string dataMsg = 3;
	string error = 5;
}

message startServiceMsg {
	string deviceId = 1;
	string platformId = 2;
	string driverId = 3;
	string companyId = 4;
	string serviceId = 5;
	string messageId = 6;
}

message startServiceResponseMsg {
	string id = 1;
	int32 dataCode = 2;
	string dataMsg = 3;
	string error = 5;
}

message executedServiceMsg {	
	repeated executedService services = 1;
}

message getExecutedServiceMsg {
	string deviceId = 1;
}

message subscribeVehProgSvcMsg {
	string deviceId = 1;
}

message getVehProgSvcMsg {
	string deviceId = 1;
	string driverId = 2;
	string driverDocument = 3;
}

message vehProgSvcMsg {
	repeated scheduleService scheduledServices = 1;
}